/**
 * @package leniwiec - A lightweight library for lazy loading of images based on the IntersectionObserver API.
 * @version v1.0.1
 * @link https://github.com/tyczynski/leniwiec.js
 * @author Przemysław Tyczyński | https://tyczynski.pl
 * @license MIT
 */
function _extends() {
	return (_extends =
		Object.assign ||
		function(e) {
			for (var t = 1; t < arguments.length; t++) {
				var n = arguments[t];
				for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);
			}
			return e;
		}).apply(this, arguments);
}
function _classCallCheck(e, t) {
	if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');
}
function _defineProperties(e, t) {
	for (var n = 0; n < t.length; n++) {
		var o = t[n];
		(o.enumerable = o.enumerable || !1),
			(o.configurable = !0),
			'value' in o && (o.writable = !0),
			Object.defineProperty(e, o.key, o);
	}
}
function _createClass(e, t, n) {
	return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e;
}
function _typeof(e) {
	return (_typeof =
		'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
			? function(e) {
					return typeof e;
			  }
			: function(e) {
					return e &&
						'function' == typeof Symbol &&
						e.constructor === Symbol &&
						e !== Symbol.prototype
						? 'symbol'
						: typeof e;
			  })(e);
}
!(function(e, t) {
	'object' === ('undefined' == typeof exports ? 'undefined' : _typeof(exports)) &&
	'undefined' != typeof module
		? (module.exports = t())
		: 'function' == typeof define && define.amd
		? define(t)
		: (e.Leniwiec = t());
})(this, function() {
	'use strict';
	var e = {
		root: null,
		rootMargin: '0px',
		threshold: 0,
		errorClassName: 'is-error',
		loadedClassName: 'is-loaded',
		onLoad: function() {},
		onError: function() {},
	};
	return (function() {
		function t() {
			var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : '.leniwiec',
				o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
			_classCallCheck(this, t),
				(this.elements = document.querySelectorAll(n)),
				(this.config = _extends({}, e, o)),
				(this.observer = null);
		}
		return (
			_createClass(t, [
				{
					key: 'mount',
					value: function() {
						this.observer = new IntersectionObserver(this.callback.bind(this), {
							root: this.config.root,
							rootMargin: this.config.rootMargin,
							threshold: this.config.threshold,
						});
						for (var e = 0; e < this.elements.length; e += 1)
							this.observer.observe(this.elements[e]);
						(('undefined' != typeof window && !('onscroll' in window)) ||
							('undefined' != typeof navigator &&
								/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent))) &&
							this.loadAll();
					},
				},
				{
					key: 'callback',
					value: function(e) {
						var t = this;
						e.forEach(function(e) {
							var n = e.target;
							e.isIntersecting && t.loadAndUnobserve(n);
						});
					},
				},
				{
					key: 'load',
					value: function(e) {
						switch (e.tagName) {
							case 'IMG':
								this.setSrc(e);
								break;
							case 'PICTURE':
								this.setPicture(e);
								break;
							default:
								this.setBackground(e);
						}
					},
				},
				{
					key: 'setSrc',
					value: function(e) {
						this.bindImageEvents(e);
						var t = e.dataset.src || '';
						e.setAttribute('src', t);
					},
				},
				{
					key: 'setBackground',
					value: function(e) {
						var t = this.createImage(e),
							n = e.dataset.backgroundImage || '';
						t.setAttribute('src', n), (e.style.backgroundImage = 'url('.concat(n, ')'));
					},
				},
				{
					key: 'setPicture',
					value: function(e) {
						var t = e.dataset.src || '',
							n = e.dataset.alt || '',
							o = this.createImage(e);
						o.setAttribute('src', t), o.setAttribute('alt', n), e.appendChild(o);
					},
				},
				{
					key: 'createImage',
					value: function(e) {
						var t = new Image();
						return this.bindImageEvents(t, e), t;
					},
				},
				{
					key: 'bindImageEvents',
					value: function(e, t) {
						var n,
							o = this,
							r = this.config,
							s = r.loadedClassName,
							i = r.errorClassName,
							a = (n = t) instanceof Element || n instanceof HTMLDocument;
						e.addEventListener('load', function() {
							e.classList.add(s), o.config.onLoad(e), a && t.classList.add(s);
						}),
							e.addEventListener('error', function() {
								e.classList.add(i), o.config.onError(e), a && t.classList.add(i);
							});
					},
				},
				{
					key: 'loadAllAndUnmount',
					value: function() {
						for (var e = 0; e < this.elements.length; e += 1)
							this.loadAndUnobserve(this.elements[e]);
					},
				},
				{
					key: 'loadAndUnobserve',
					value: function(e) {
						this.load(e), this.observer.unobserve(e);
					},
				},
				{
					key: 'observe',
					value: function(e) {
						this.observer.observe(e);
					},
				},
			]),
			t
		);
	})();
});
